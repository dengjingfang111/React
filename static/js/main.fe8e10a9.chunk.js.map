{"version":3,"sources":["pages/Input.js","pages/List.js","pages/TodoList.js","index.js"],"names":["Input","props","ref","this","refs","value","type","onChange","onClick","addTodo","Component","List","renderTodos","done","todos","map","todo","idx","toggle","checked","title","delButton","console","log","tds","arr1","filter","item","arr2","length","TodoList","handleChange","e","setState","inpValue","target","state","delTodo","index","localStorage","setItem","JSON","stringify","newTodos","parse","input","focus","getItem","inp","ReactDOM","render","document","getElementById"],"mappings":"6KAyBeA,E,kDApBX,WAAYC,GAAO,uCACTA,G,qDAGN,OACI,6BACI,2BACIC,IAAKC,KAAKF,MAAMG,KAChBC,MAAOF,KAAKF,MAAMI,MAClBC,KAAK,OACLC,SAAUJ,KAAKF,MAAMM,WAEzB,4BAAQC,QAASL,KAAKF,MAAMQ,SAA5B,qB,GAbIC,aCmCLC,E,kDArCX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAEVW,YAAc,SAACC,GACX,OAAO,EAAKZ,MAAMa,MAAMC,KAAI,SAACC,EAAMC,GAC/B,GAAIJ,GAAQG,EAAKH,KACb,OAAO,4BACH,2BACIL,QAAS,kBAAM,EAAKP,MAAMiB,OAAOD,IACjCE,QAASN,EAAMP,KAAK,aACxB,8BAAOU,EAAKI,OACZ,4BAAQZ,QAAS,kBAAM,EAAKP,MAAMoB,UAAUJ,KAA5C,qBAXG,E,qDAkBfK,QAAQC,IAAIpB,KAAKF,OACjB,IAAIuB,EAAMrB,KAAKF,MAAMa,MACjBW,EAAOD,EAAIE,QAAO,SAACC,GAAD,OAAWA,EAAKd,QAClCe,EAAOJ,EAAIE,QAAO,SAAAC,GAAI,OAAIA,EAAKd,QACnC,OACI,6BACI,uDAASY,EAAKI,QACd,4BACK1B,KAAKS,aAAY,IAEtB,uDAASgB,EAAKC,QACd,4BACK1B,KAAKS,aAAY,S,GA/BnBF,aCiFJoB,E,kDA7EX,aAAe,IAAD,8BACV,gBAMJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,SAAUF,EAAEG,OAAO9B,SARzB,EA0BdI,QAAU,WACqB,IAAvB,EAAK2B,MAAMF,WAGX,EAAKD,SAAS,CACVnB,MAAM,CACF,CACIM,MAAO,EAAKgB,MAAMF,SAClBrB,MAAM,IAHT,mBAKE,EAAKuB,MAAMtB,UAGtB,EAAKmB,SAAS,CAACC,SAAS,OAvClB,EAyCdG,QAAU,SAACpB,GACP,EAAKgB,SAAS,CACVnB,MAAO,EAAKsB,MAAMtB,MAAMY,QAAO,SAACC,EAAMW,GAAP,OAAiBA,GAASrB,OAC1D,WACCsB,aAAaC,QACT,QACAC,KAAKC,UAAU,EAAKN,MAAMtB,YA/CxB,EAmDdI,OAAS,SAACoB,GACL,IAAIK,EAAUF,KAAKG,MAAMH,KAAKC,UAAU,EAAKN,MAAMtB,QACpD6B,EAASL,GAAOzB,MAAQ8B,EAASL,GAAOzB,KACxC,EAAKoB,SAAS,CACVnB,MAAO6B,KArDX,EAAKP,MAAQ,CACTF,SAAU,GACVpB,MAAO,IAJD,E,gEAWVX,KAAK0C,MAAMC,QACX,IAAIhC,EAAQyB,aAAaQ,QAAQ,SAC7BjC,GACAX,KAAK8B,SAAS,CACVnB,MAAO2B,KAAKG,MAAM9B,O,2CAK1ByB,aAAaC,QACT,QACAC,KAAKC,UAAUvC,KAAKiC,MAAMtB,U,+BAoCxB,IAAD,SACuBX,KAAKiC,MAD5B,EACGtB,MADH,EACUoB,SACf,OACI,6BACI,kBAAC,EAAD,CACIzB,QAASN,KAAKM,QACdJ,MAAOF,KAAKiC,MAAMF,SAClB3B,SAAUJ,KAAK4B,aACf3B,KAAM,SAAA4C,GAAG,OAAI,EAAKH,MAAQG,KAC9B,kBAAC,EAAD,CACIX,QAASlC,KAAKkC,QACdnB,OAAUf,KAAKe,OACfJ,MAASX,KAAKiC,MAAMtB,a,GAvEjBJ,aCAvBuC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fe8e10a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// const btns = '添加';\r\n\r\nclass Input extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                    ref={this.props.refs}\r\n                    value={this.props.value}\r\n                    type=\"text\"\r\n                    onChange={this.props.onChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>\r\n                    添加\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    renderTodos = (done) => {\r\n        return this.props.todos.map((todo, idx) => {\r\n            if (done == todo.done) {\r\n                return <li>\r\n                    <input\r\n                        onClick={() => this.props.toggle(idx)}\r\n                        checked={done} type=\"checkbox\" />\r\n                    <span>{todo.title}</span>\r\n                    <button onClick={() => this.props.delButton(idx)}>删除</button>\r\n                    {/* ()=>this.delTodo(idx) 外面的小括号是事件处理函数，通过外面进行调用，里面才可以传参 */}\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        let tds = this.props.todos;\r\n        let arr1 = tds.filter((item) => !item.done)\r\n        let arr2 = tds.filter(item => item.done)\r\n        return (\r\n            <div>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List\r\n","import React, { Component } from 'react';\r\nimport Input from './Input.js';\r\nimport List from './List';\r\n\r\nclass TodoList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos: []\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ inpValue: e.target.value })\r\n    }\r\n    componentDidMount() {\r\n        this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if (todos) {\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n\r\n    addTodo = () => {\r\n        if (this.state.inpValue == '') {\r\n              return;\r\n        }\r\n            this.setState({\r\n                todos: [\r\n                    {\r\n                        title: this.state.inpValue,\r\n                        done: false\r\n                    },\r\n                    ...this.state.todos\r\n                ]\r\n            })\r\n            this.setState({inpValue:''})\r\n    }\r\n    delTodo = (idx) => {\r\n        this.setState({\r\n            todos: this.state.todos.filter((item, index) => index != idx)\r\n        }, () => {\r\n            localStorage.setItem(\r\n                'todos',\r\n                JSON.stringify(this.state.todos)\r\n            )\r\n        });\r\n    }\r\n    toggle = (index) => {\r\n         let newTodos= JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    render() {\r\n        const { todos, inpValue } = this.state;\r\n        return (\r\n            <div>\r\n                <Input \r\n                    addTodo={this.addTodo}\r\n                    value={this.state.inpValue}\r\n                    onChange={this.handleChange}\r\n                    refs={inp => this.input = inp} />\r\n                <List \r\n                    delTodo={this.delTodo}\r\n                    toggle = {this.toggle}\r\n                    todos = {this.state.todos}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TodoList from './pages/TodoList';\r\n\r\nReactDOM.render(\r\n  <TodoList/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}